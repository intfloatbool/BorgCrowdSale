Crowdsale ICO :
CrowdSale - продажа коинов толпе

Есть несколько свойств, вот несколько важных:

- Цена и конфигурация коэффициента:
	- Ваш crowdsale продает токены по фиксированной цене?
	- Или цена меняется в зависимости от времени или от чего-то еще?

- Эмиссия 
	-Как токены отправляются участникам?

- Валидация - кому доступна покупка токенов?
	- Есть ли проверка KYC / AML ?
	- Есть ли ограничения на покупку токенов?
	- Что если эти ограничения для каждого участника?
	- Есть ли определенный период времени на продажу?

- Распределение
	- Распределение средств происходит во время или после crowdsale?
	- Могут ли участники получить возмещение затрат если цель не достигнута?
	
** Crowdsale коэффециент **
Понимание коэффициента crowdsale супер важно, здесь очень распространенны ошибки.

Во-первых все рассчеты валюты происходят в наименьшей единице этой валюты и конвертируются в правильные десятичные знаки, когда показывается валюта.

Это означает, что когда вы производите рассчеты в смарт-контракте, вам надо понимать что вы прибавляете/делите и умнажаете наименьшую единицу вашей валюты (типо wei), а не обычно используемое число валюты (Ether)

В Ether наименьшое число валюты это wei(1 ETH === 10^18 wei). В ваших токенах процесс очень похож (TKN === 10^(DECIMALS) TKNbits).
 -Минимальная единица токена это 'bits' или 'TKNbits'
 -Отображаемое число токена это TKN, по формуле TKNbits * 10 ^ (decimals)

То что люди обычно называют 'один токен' в самом деле набор TKNbits, отображаемых как 1 TKN. Такая же связть как Ether и Wei. ТАк что вы всегда производите рассчеты в TKNbits и wei.

Так если вы хотите продать ваш токен по цене 2 wei и ваши decimals равняются 18, то ваш коэффициент равняется 0.5e17. Таким образом, когда я отправляю вам 2 wei, ваш crowdsale выдает мне 2 * 0.5e17 TKNbits, что точно равняется 10^18 TKNbits, и отображается как 1 TKN.

Если ваш токен выдается '1 TKN === 1 ETH' , а ваши decimals === 18, то ваш 
курс === 1. Учитывая ,что все рассчеты происходят в 10^18 wei, то ваш токен будет отображаться как 1 TKN.

Если например вы хотите выдавать токены по принципу '1TKN за каждый доллар в (USD) в Ether', мы можем посчитать так:

- Преположим что 1 ETH === $400
- Значит 10^18 wei === $400
- Таким образом, 1 USD это 10^18 / 400, или 2.5 * 10^15 wei
- Наши decimals === 18, так мы будем использовать 10^18 TKNbits вместо 1 TKN
- Таким образом, если участники crowdsale отправляют 2.5 * 10^15 wei (1 USD) мы должны дать им 10 ^ 18 TKNbits (1 TKN)
- Значит курс 2.5 * 10^15 wei === 10^18 TKNbits, или 1 wei = 400TKNbits
- Значит наш курс === 400.

*** Эмиссия токенов ***

Одно из ваших первых решений должно быть - 'как я получу эти токены для пользователей?', обычно это делается тремя способами:

- (по умолчанию) - Crowdsale контракт владеет токенами и просто отправляет токены из собственного владения к пользователям, которые их покупают.
- MintedCrowdsale - Crowdsale создает токены при совершении покупки.
- AllowanceCrowdsale - Crowdsale гарантирует доступ к другому кошельку (например Multisig) которые будут продаваться в Crowdsale.


*** Стандартная эмиссия ***
В обычном случае, ваш crowdsale-контракт должен владеть токенами, которые будут продаваться. Вы можете отправлять токены различными методами, вот как это выглядит в Solidity:
 {
 	IRC20(tokenAddress).transfer(CROWDSALE_ADDRESS, SOME_TOKEN_AMOUNT);
 }
 
 Когда вы развертываете crowdsale-контакт, просто укажите ему token:
 {
 	new Crowdsale(
		1, //курс в TKNbits
		MY_WALLET, //адрес по которому отправляется Ether,
		TOKEN_ADDRESS //адресс контракта token'a
	);
 }
 
*** Minted Crowdsale ***
Чтобы использовать MintedCrowdSale, ваш токен должен также быть ERC20Mintable, в котором ваш Crowdsale имеет разрешение на создание монет.
Это может выглядеть так:

{
	contract MyToken is ERC20, ERC20Mintable {
		//инициализация токена
	}
	
	contract MyCrowdsale is Crowdsale, MintedCrowdsale {
		constructor(
			uint256 rate, //курс в TKNbits
			address wallet,
			ERC20 token
		) MintedCrowdsale() 
		  CrowdSale(rate, walletn token) public { 
		  
		  }
	} 
	
	contract MyCrowdsaleDeployer {
		constructor() public {
			//создаие mintable токена
			ERC20Mintable token = new MyToken();
			
			//создание crowdsale и передача ему токена
			Crowdsale crowdsale = new MyCrowdsale(
				1, //курс в TKNbits
				msg.send, //отправлять Ether с покупке владельцу
				address(token) //токен
			);
			
			//передача роли minter'a от этого контракта (по умолчанию)
			// к crowdsale, теперь он может создавать токены
			token.addMinter(address(crowdsale));
			token.renounceMinter();
		}
	}	
}














 
 






	